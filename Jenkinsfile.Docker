pipeline {
	agent {
	    label 'jenkins && docker'
	}
    stages {
        stage('Build image and run tests') {
            steps {
                script {
					withEnv(readFile('.env').split('\n') as List) {
						docker.image("faulo/farah:$PHP_VERSION").inside {
							sh 'composer update --no-interaction'
							sh 'composer exec phpunit -- --log-junit report.xml'
							junit 'report.xml'
							stash name:'lock', includes:'composer.lock'
						}
					}
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
					withEnv(readFile('.env').split('\n') as List) {
						dir("/var/vhosts/$STACK_NAME") {
							checkout scm
							sh "docker stack deploy $STACK_NAME --detach=true --prune --resolve-image=always -c=docker-compose.yml"
							unstash 'lock'
							sh 'docker exec $(docker ps -q -f name=' + env.STACK_NAME + '_' + env.STACK_NAME + ') composer install --no-interaction --no-dev'
						}
					}
                }
            }
        }
	}
}